// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PassportsApp.Data;

#nullable disable

namespace PassportsApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PassportsApp.Models.Authority", b =>
                {
                    b.Property<int>("AutorityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("EstablishmentDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("HouseNum")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .HasColumnType("longtext");

                    b.HasKey("AutorityId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Authority");
                });

            modelBuilder.Entity("PassportsApp.Models.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CountryName")
                        .HasColumnType("longtext");

                    b.HasKey("CountryCode");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("PassportsApp.Models.Passport", b =>
                {
                    b.Property<int>("PassportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AuthorityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("PassportId");

                    b.HasIndex("Type");

                    b.ToTable("Passport");
                });

            modelBuilder.Entity("PassportsApp.Models.PassportHolder", b =>
                {
                    b.Property<int>("HolderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BirthPlace")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Citizenship")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("HolderName")
                        .HasColumnType("longtext");

                    b.Property<string>("HolderPhoto")
                        .HasColumnType("longtext");

                    b.Property<string>("HolderSurname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("PassportId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<string>("PatronymicMatronymic")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("SexAbr")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Signature")
                        .HasColumnType("longtext");

                    b.HasKey("HolderId");

                    b.HasIndex("Citizenship");

                    b.HasIndex("PassportId");

                    b.HasIndex("SexAbr");

                    b.ToTable("PassportsHolder");
                });

            modelBuilder.Entity("PassportsApp.Models.PassportType", b =>
                {
                    b.Property<string>("PassportTypeAbr")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PassportTypeDesc")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("PassportTypeAbr");

                    b.ToTable("PassportType");
                });

            modelBuilder.Entity("PassportsApp.Models.Sex", b =>
                {
                    b.Property<string>("SexAbr")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullSex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("SexAbr");

                    b.ToTable("Sex");
                });

            modelBuilder.Entity("PassportsApp.Models.Authority", b =>
                {
                    b.HasOne("PassportsApp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("PassportsApp.Models.Passport", b =>
                {
                    b.HasOne("PassportsApp.Models.PassportType", "PassportType")
                        .WithMany()
                        .HasForeignKey("Type")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PassportType");
                });

            modelBuilder.Entity("PassportsApp.Models.PassportHolder", b =>
                {
                    b.HasOne("PassportsApp.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("Citizenship")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PassportsApp.Models.Passport", "Passport")
                        .WithMany()
                        .HasForeignKey("PassportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PassportsApp.Models.Sex", "Sex")
                        .WithMany()
                        .HasForeignKey("SexAbr");

                    b.Navigation("Country");

                    b.Navigation("Passport");

                    b.Navigation("Sex");
                });
#pragma warning restore 612, 618
        }
    }
}
